try {
        const event = await fetch(`http://localhost:3000/events/${eventId}`)
        if (!event.ok) {
            throw new Error('Event not found')
        }
        const eventData = await event.json()   
        renderEditEvent(eventData)
    } catch (error) {
        console.error('Error rendering edit event view:', error)
        alertInfo('Error al cargar los datos del evento')
    }
        app.innerHTML = `
        <section id="edit-event">
            <h2>Edit Event: ${event.name}</h2>
            <form id="edit-event-form">
                <input type="text" id="event-name" value="${event.name}" required />
                <textarea id="event-description">${event.description}</textarea>
                <input type="number" id="event-capacity" value="${event.capacity}" required />
                <input type="date" id="event-date" value="${event.date}" required />
                <button type="submit">Save Changes</button>
            </form>
        </section>`

        // Handle form submission
        document.getElementById("edit-event-form").onsubmit = async event => {
            event.preventDefault()
            const updatedEvent = {
                name: document.getElementById("event-name").value,
                description: document.getElementById("event-description").value,
                capacity: document.getElementById("event-capacity").value,
                date: document.getElementById("event-date").value
            }
            try {
                await api.put(`/events/${eventId}`, updatedEvent) // Actualiza el evento en la API
                console.log("Event updated successfully!")
                location.hash = "#/dashboard" // Redirige al dashboard
            } catch (error) {
                console.error("Error updating event:", error)
            }
        }
    } catch (error) {
        console.error("Error fetching event data:", error)
        alertInfo('Error al cargar los datos del evento')
    }